parseFile("C:/home/adrpo33/dev/OMWebEdit/example/RLCircuit.mo","UTF-8"); getErrorString();
loadFile("C:/home/adrpo33/dev/OMWebEdit/example/RLCircuit.mo","UTF-8",true); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
currentError:=errors[1]; getErrorString();
currentError.level; getErrorString();
currentError.kind; getErrorString();
currentError.message; getErrorString();
currentError.info.columnEnd; getErrorString();
currentError.info.lineEnd; getErrorString();
currentError.info.columnStart; getErrorString();
currentError.info.lineStart; getErrorString();
currentError.info.readonly; getErrorString();
currentError.info.filename; getErrorString();
getClassInformation(RLCircuit); getErrorString();
getClassNames(RLCircuit,true,true,false,false,true,false); getErrorString();
getInheritedClasses(RLCircuit); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getIconAnnotation(RLCircuit); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getClassNames(AllLoadedClasses,false,false,false,false,true,false); getErrorString();
getComponents(RLCircuit, useQuotes = true); getErrorString();
getComponentAnnotations(RLCircuit); getErrorString();
getDiagramAnnotation(RLCircuit); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getInheritedClasses(Modelica.Electrical.Analog.Basic.Ground); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getIconAnnotation(Modelica.Electrical.Analog.Basic.Ground); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getComponents(Modelica.Electrical.Analog.Basic.Ground, useQuotes = true); getErrorString();
getComponentAnnotations(Modelica.Electrical.Analog.Basic.Ground); getErrorString();
getInheritedClasses(Modelica.Electrical.Analog.Interfaces.Pin); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getIconAnnotation(Modelica.Electrical.Analog.Interfaces.Pin); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getComponents(Modelica.Electrical.Analog.Interfaces.Pin, useQuotes = true); getErrorString();
getComponentAnnotations(Modelica.Electrical.Analog.Interfaces.Pin); getErrorString();
getDiagramAnnotation(Modelica.Electrical.Analog.Interfaces.Pin); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getInheritedClasses(Modelica.SIunits.ElectricPotential); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getIconAnnotation(Modelica.SIunits.ElectricPotential); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getComponents(Modelica.SIunits.ElectricPotential, useQuotes = true); getErrorString();
getDiagramAnnotation(Modelica.SIunits.ElectricPotential); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getInheritedClasses(Modelica.SIunits.Current); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getInheritedClasses(Modelica.SIunits.ElectricCurrent); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getIconAnnotation(Modelica.SIunits.ElectricCurrent); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getNthInheritedClassIconMapAnnotation(Modelica.SIunits.Current, 1); getErrorString();
getNthInheritedClassDiagramMapAnnotation(Modelica.SIunits.Current, 1); getErrorString();
getIconAnnotation(Modelica.SIunits.Current); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getComponents(Modelica.SIunits.ElectricCurrent, useQuotes = true); getErrorString();
getDiagramAnnotation(Modelica.SIunits.ElectricCurrent); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getComponents(Modelica.SIunits.Current, useQuotes = true); getErrorString();
getDiagramAnnotation(Modelica.SIunits.Current); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getDiagramAnnotation(Modelica.Electrical.Analog.Basic.Ground); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getInheritedClasses(Modelica.Electrical.Analog.Basic.Resistor); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getInheritedClasses(Modelica.Electrical.Analog.Interfaces.OnePort); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getIconAnnotation(Modelica.Electrical.Analog.Interfaces.OnePort); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getNthInheritedClassIconMapAnnotation(Modelica.Electrical.Analog.Basic.Resistor, 1); getErrorString();
getNthInheritedClassDiagramMapAnnotation(Modelica.Electrical.Analog.Basic.Resistor, 1); getErrorString();
getInheritedClasses(Modelica.Electrical.Analog.Interfaces.ConditionalHeatPort); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getIconAnnotation(Modelica.Electrical.Analog.Interfaces.ConditionalHeatPort); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getNthInheritedClassIconMapAnnotation(Modelica.Electrical.Analog.Basic.Resistor, 2); getErrorString();
getNthInheritedClassDiagramMapAnnotation(Modelica.Electrical.Analog.Basic.Resistor, 2); getErrorString();
getIconAnnotation(Modelica.Electrical.Analog.Basic.Resistor); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getComponentModifierNames(RLCircuit,"resistor1"); getErrorString();
getComponents(Modelica.Electrical.Analog.Interfaces.OnePort, useQuotes = true); getErrorString();
getComponentAnnotations(Modelica.Electrical.Analog.Interfaces.OnePort); getErrorString();
getInheritedClasses(Modelica.Electrical.Analog.Interfaces.PositivePin); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getIconAnnotation(Modelica.Electrical.Analog.Interfaces.PositivePin); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getComponents(Modelica.Electrical.Analog.Interfaces.PositivePin, useQuotes = true); getErrorString();
getComponentAnnotations(Modelica.Electrical.Analog.Interfaces.PositivePin); getErrorString();
getDiagramAnnotation(Modelica.Electrical.Analog.Interfaces.PositivePin); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getInheritedClasses(Modelica.Electrical.Analog.Interfaces.NegativePin); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getIconAnnotation(Modelica.Electrical.Analog.Interfaces.NegativePin); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getComponents(Modelica.Electrical.Analog.Interfaces.NegativePin, useQuotes = true); getErrorString();
getComponentAnnotations(Modelica.Electrical.Analog.Interfaces.NegativePin); getErrorString();
getDiagramAnnotation(Modelica.Electrical.Analog.Interfaces.NegativePin); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getComponents(Modelica.Electrical.Analog.Interfaces.ConditionalHeatPort, useQuotes = true); getErrorString();
getComponentAnnotations(Modelica.Electrical.Analog.Interfaces.ConditionalHeatPort); getErrorString();
getInheritedClasses(Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getInheritedClasses(Modelica.Thermal.HeatTransfer.Interfaces.HeatPort); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getIconAnnotation(Modelica.Thermal.HeatTransfer.Interfaces.HeatPort); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getNthInheritedClassIconMapAnnotation(Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a, 1); getErrorString();
getNthInheritedClassDiagramMapAnnotation(Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a, 1); getErrorString();
getIconAnnotation(Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getComponents(Modelica.Thermal.HeatTransfer.Interfaces.HeatPort, useQuotes = true); getErrorString();
getComponentAnnotations(Modelica.Thermal.HeatTransfer.Interfaces.HeatPort); getErrorString();
getDiagramAnnotation(Modelica.Thermal.HeatTransfer.Interfaces.HeatPort); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getInheritedClasses(Modelica.SIunits.Temperature); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getInheritedClasses(Modelica.SIunits.ThermodynamicTemperature); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getIconAnnotation(Modelica.SIunits.ThermodynamicTemperature); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getNthInheritedClassIconMapAnnotation(Modelica.SIunits.Temperature, 1); getErrorString();
getNthInheritedClassDiagramMapAnnotation(Modelica.SIunits.Temperature, 1); getErrorString();
getIconAnnotation(Modelica.SIunits.Temperature); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getComponents(Modelica.SIunits.ThermodynamicTemperature, useQuotes = true); getErrorString();
getDiagramAnnotation(Modelica.SIunits.ThermodynamicTemperature); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getComponents(Modelica.SIunits.Temperature, useQuotes = true); getErrorString();
getDiagramAnnotation(Modelica.SIunits.Temperature); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getInheritedClasses(Modelica.SIunits.HeatFlowRate); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getIconAnnotation(Modelica.SIunits.HeatFlowRate); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getComponents(Modelica.SIunits.HeatFlowRate, useQuotes = true); getErrorString();
getDiagramAnnotation(Modelica.SIunits.HeatFlowRate); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getComponents(Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a, useQuotes = true); getErrorString();
getDiagramAnnotation(Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getComponents(Modelica.Electrical.Analog.Basic.Resistor, useQuotes = true); getErrorString();
getComponentAnnotations(Modelica.Electrical.Analog.Basic.Resistor); getErrorString();
getDiagramAnnotation(Modelica.Electrical.Analog.Interfaces.OnePort); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getInheritedClasses(Modelica.SIunits.Voltage); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getNthInheritedClassIconMapAnnotation(Modelica.SIunits.Voltage, 1); getErrorString();
getNthInheritedClassDiagramMapAnnotation(Modelica.SIunits.Voltage, 1); getErrorString();
getIconAnnotation(Modelica.SIunits.Voltage); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getComponents(Modelica.SIunits.Voltage, useQuotes = true); getErrorString();
getDiagramAnnotation(Modelica.SIunits.Voltage); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getDiagramAnnotation(Modelica.Electrical.Analog.Interfaces.ConditionalHeatPort); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getInheritedClasses(Modelica.SIunits.Power); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getIconAnnotation(Modelica.SIunits.Power); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getComponents(Modelica.SIunits.Power, useQuotes = true); getErrorString();
getDiagramAnnotation(Modelica.SIunits.Power); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getDiagramAnnotation(Modelica.Electrical.Analog.Basic.Resistor); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getInheritedClasses(Modelica.SIunits.Resistance); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getIconAnnotation(Modelica.SIunits.Resistance); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getComponents(Modelica.SIunits.Resistance, useQuotes = true); getErrorString();
getDiagramAnnotation(Modelica.SIunits.Resistance); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getInheritedClasses(Modelica.SIunits.LinearTemperatureCoefficient); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getIconAnnotation(Modelica.SIunits.LinearTemperatureCoefficient); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getComponents(Modelica.SIunits.LinearTemperatureCoefficient, useQuotes = true); getErrorString();
getDiagramAnnotation(Modelica.SIunits.LinearTemperatureCoefficient); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getParameterValue(Modelica.Electrical.Analog.Basic.Resistor,"R"); getErrorString();
getExtendsModifierNames(Modelica.Electrical.Analog.Basic.Resistor,Modelica.Electrical.Analog.Interfaces.OnePort, useQuotes = true); getErrorString();
getExtendsModifierNames(Modelica.Electrical.Analog.Basic.Resistor,Modelica.Electrical.Analog.Interfaces.ConditionalHeatPort, useQuotes = true); getErrorString();
getExtendsModifierValue(Modelica.Electrical.Analog.Basic.Resistor,Modelica.Electrical.Analog.Interfaces.ConditionalHeatPort,T); getErrorString();
getInheritedClasses(Modelica.Electrical.Analog.Basic.Inductor); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getNthInheritedClassIconMapAnnotation(Modelica.Electrical.Analog.Basic.Inductor, 1); getErrorString();
getNthInheritedClassDiagramMapAnnotation(Modelica.Electrical.Analog.Basic.Inductor, 1); getErrorString();
getIconAnnotation(Modelica.Electrical.Analog.Basic.Inductor); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getComponentModifierNames(RLCircuit,"inductor1"); getErrorString();
getComponents(Modelica.Electrical.Analog.Basic.Inductor, useQuotes = true); getErrorString();
getComponentAnnotations(Modelica.Electrical.Analog.Basic.Inductor); getErrorString();
getDiagramAnnotation(Modelica.Electrical.Analog.Basic.Inductor); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getInheritedClasses(Modelica.SIunits.Inductance); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getIconAnnotation(Modelica.SIunits.Inductance); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getComponents(Modelica.SIunits.Inductance, useQuotes = true); getErrorString();
getDiagramAnnotation(Modelica.SIunits.Inductance); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getParameterValue(Modelica.Electrical.Analog.Basic.Inductor,"L"); getErrorString();
getExtendsModifierNames(Modelica.Electrical.Analog.Basic.Inductor,Modelica.Electrical.Analog.Interfaces.OnePort, useQuotes = true); getErrorString();
getExtendsModifierValue(Modelica.Electrical.Analog.Basic.Inductor,Modelica.Electrical.Analog.Interfaces.OnePort,i.start); getErrorString();
getInheritedClasses(Modelica.Electrical.Analog.Sources.SineVoltage); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getInheritedClasses(Modelica.Electrical.Analog.Interfaces.VoltageSource); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getNthInheritedClassIconMapAnnotation(Modelica.Electrical.Analog.Interfaces.VoltageSource, 1); getErrorString();
getNthInheritedClassDiagramMapAnnotation(Modelica.Electrical.Analog.Interfaces.VoltageSource, 1); getErrorString();
getIconAnnotation(Modelica.Electrical.Analog.Interfaces.VoltageSource); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getNthInheritedClassIconMapAnnotation(Modelica.Electrical.Analog.Sources.SineVoltage, 1); getErrorString();
getNthInheritedClassDiagramMapAnnotation(Modelica.Electrical.Analog.Sources.SineVoltage, 1); getErrorString();
getIconAnnotation(Modelica.Electrical.Analog.Sources.SineVoltage); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getComponents(Modelica.Electrical.Analog.Interfaces.VoltageSource, useQuotes = true); getErrorString();
getComponentAnnotations(Modelica.Electrical.Analog.Interfaces.VoltageSource); getErrorString();
getDiagramAnnotation(Modelica.Electrical.Analog.Interfaces.VoltageSource); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getInheritedClasses(Modelica.SIunits.Time); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getIconAnnotation(Modelica.SIunits.Time); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getComponents(Modelica.SIunits.Time, useQuotes = true); getErrorString();
getDiagramAnnotation(Modelica.SIunits.Time); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getInheritedClasses(Modelica.Blocks.Interfaces.SignalSource); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getInheritedClasses(Modelica.Blocks.Interfaces.SO); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getInheritedClasses(Modelica.Blocks.Icons.Block); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getIconAnnotation(Modelica.Blocks.Icons.Block); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getNthInheritedClassIconMapAnnotation(Modelica.Blocks.Interfaces.SO, 1); getErrorString();
getNthInheritedClassDiagramMapAnnotation(Modelica.Blocks.Interfaces.SO, 1); getErrorString();
getIconAnnotation(Modelica.Blocks.Interfaces.SO); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getNthInheritedClassIconMapAnnotation(Modelica.Blocks.Interfaces.SignalSource, 1); getErrorString();
getNthInheritedClassDiagramMapAnnotation(Modelica.Blocks.Interfaces.SignalSource, 1); getErrorString();
getIconAnnotation(Modelica.Blocks.Interfaces.SignalSource); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getComponents(Modelica.Blocks.Icons.Block, useQuotes = true); getErrorString();
getDiagramAnnotation(Modelica.Blocks.Icons.Block); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getComponents(Modelica.Blocks.Interfaces.SO, useQuotes = true); getErrorString();
getComponentAnnotations(Modelica.Blocks.Interfaces.SO); getErrorString();
getInheritedClasses(Modelica.Blocks.Interfaces.RealOutput); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getIconAnnotation(Modelica.Blocks.Interfaces.RealOutput); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getComponents(Modelica.Blocks.Interfaces.RealOutput, useQuotes = true); getErrorString();
getDiagramAnnotation(Modelica.Blocks.Interfaces.RealOutput); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getDiagramAnnotation(Modelica.Blocks.Interfaces.SO); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getComponents(Modelica.Blocks.Interfaces.SignalSource, useQuotes = true); getErrorString();
getComponentAnnotations(Modelica.Blocks.Interfaces.SignalSource); getErrorString();
getDiagramAnnotation(Modelica.Blocks.Interfaces.SignalSource); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getComponents(Modelica.Electrical.Analog.Sources.SineVoltage, useQuotes = true); getErrorString();
getComponentAnnotations(Modelica.Electrical.Analog.Sources.SineVoltage); getErrorString();
getDiagramAnnotation(Modelica.Electrical.Analog.Sources.SineVoltage); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getInheritedClasses(Modelica.SIunits.Angle); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getIconAnnotation(Modelica.SIunits.Angle); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getComponents(Modelica.SIunits.Angle, useQuotes = true); getErrorString();
getDiagramAnnotation(Modelica.SIunits.Angle); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getInheritedClasses(Modelica.SIunits.Frequency); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getIconAnnotation(Modelica.SIunits.Frequency); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getComponents(Modelica.SIunits.Frequency, useQuotes = true); getErrorString();
getDiagramAnnotation(Modelica.SIunits.Frequency); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getConnectionCount(RLCircuit); getErrorString();
getNthConnection(RLCircuit,1); getErrorString();
getNthConnectionAnnotation(RLCircuit, 1); getErrorString();
getNthConnection(RLCircuit,2); getErrorString();
getNthConnectionAnnotation(RLCircuit, 2); getErrorString();
getNthConnection(RLCircuit,3); getErrorString();
getNthConnectionAnnotation(RLCircuit, 3); getErrorString();
getNthConnection(RLCircuit,4); getErrorString();
getNthConnectionAnnotation(RLCircuit, 4); getErrorString();
getTransitions(RLCircuit); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getInitialStates(RLCircuit); getErrorString();
errors:=getMessagesStringInternal(); getErrorString();
size(errors,1); getErrorString();
getDocumentationAnnotation(RLCircuit); getErrorString();
getClassComment(RLCircuit); getErrorString();

